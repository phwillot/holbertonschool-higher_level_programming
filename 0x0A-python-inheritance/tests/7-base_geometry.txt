>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", -5)
Traceback (most recent call last):
ValueError: my_int must be greater than 0

>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
ValueError: my_int must be greater than 0

>>> bg.integer_validator("test", "test")
Traceback (most recent call last):
TypeError: test must be an integer

>>> bg.integer_validator("test", 23)

>>> bg.integer_validator("test")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("test", 23, 23)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator("test", None)
Traceback (most recent call last):
TypeError: test must be an integer

>>> bg.integer_validator("float", -444.54)
Traceback (most recent call last):
...
TypeError: float must be an integer

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("", 98)

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("test", "test")
Traceback (most recent call last):
TypeError: test must be an integer

>>> bg.integer_validator("betty", {1, 2, 3})
Traceback (most recent call last):
TypeError: betty must be an integer

>>> bg.integer_validator("betty", (1, 2, 3))
Traceback (most recent call last):
TypeError: betty must be an integer

>>> bg.integer_validator("betty", [1, 2, 3])
Traceback (most recent call last):
TypeError: betty must be an integer
